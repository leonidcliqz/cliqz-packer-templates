
properties([
    [$class: 'JobRestrictionProperty'],
    parameters([
        string(defaultValue: 'https://github.com/leonidcliqz/cliqz-packer-templates',
            name: 'GIT_REPO'),
		string(defaultValue: 'ova-format',
            name: 'GIT_BRANCH'),
        string(defaultValue: 's3://cliqz-ci/packer/packer',
            name: 'PACKER_S3_URL'),
        string(defaultValue: '/home/ubuntu/packer',
            name: 'PACKER_PATH'),    
        string(defaultValue: 'cliqz-ci',
            name: 'S3_BUCKET'),
		string(defaultValue: 'd7e38c4a-37eb-490b-b4da-2f53cc14ab1b',
            name: 'AWS_CREDENTIALS')       

    ]),
    pipelineTriggers([])
])



node("docker && us-east-1") {
    ws("/home/ubuntu/jenkins/") {
        stage("Checkout") {
            git(
                branch: params.GIT_BRANCH, 
                credentialsId: 'cliqz-ci', 
                url: params.GIT_REPO
            ) 
        }
        
        stage("Download Packer") {
            if (!fileExists(params.PACKER_PATH)) {
                s3Download bucket: params.S3_BUCKET, file: params.PACKER_PATH, path: 'packer/packer'
                sh "chmod +x ${params.PACKER_PATH}"
            } 
        }
        dir("/home/ubuntu/jenkins/windows") {
            stage("Download Downloadr") {
                ansiColor('xterm') {
                    if (!fileExists('downloadr.exe')) {
                        s3Download bucket: params.S3_BUCKET, file: 'downloadr.exe', path: 'packer/downloadr.exe'
                    }
                    if (!fileExists('config.json')) {
                        s3Download bucket: params.S3_BUCKET, file: 'config.json', path: 'packer/config.json'
                    }
                }
            }
            stage("Build Image") {
                withEnv([
                    "AWS_TIMEOUT_SECONDS=3600"
                ]){
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        credentialsId: params.AWS_CREDENTIALS, 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                        ansiColor('xterm') {
                            sh "PACKER_LOG=1 ${params.PACKER_PATH} build -var \"aws_access_key_id=${AWS_ACCESS_KEY_ID}\" -var \"aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}\" packer_ec2.json"
                        }
                    
                    }
                }
            }
        }
    }
}

